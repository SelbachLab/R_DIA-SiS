% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions.R
\name{calculate_SILAC_ratios}
\alias{calculate_SILAC_ratios}
\title{Calculation of SILAC ratios}
\usage{
calculate_SILAC_ratios(
  data,
  filterSet,
  useFilter = c("requantify", "standard"),
  precursorPerProtein = 1,
  globalReference = c("L", "M", "H"),
  globalCalculation = c("all", "set"),
  PGcalculation = c("standard", "any", "Ms1.Translated", "Precursor.Translated", "sc"),
  generatePGmatrix = F,
  version = "1.8.1"
)
}
\arguments{
\item{data}{Output from clean_DIANN, filter_DIANN or raw DIANN report}

\item{filterSet}{Output from filter_DIANN}

\item{useFilter}{one of a) "requantify", or b) "standard". Uses Precursors for calculation where a) the reference channel passed standard filters or b) all channels passed standard filters.}

\item{precursorPerProtein}{How many precursors are required for one protein. Default is 1. The more precursors are required, the better quantitative performance of remaining proteins gets.}

\item{globalReference}{One of "L", "M", "H". Defines which channel should be used as a global reference to build normalized intensities. Should be the channel that was experimentally spiked-in.}

\item{globalCalculation}{which reference proteins shall be used for the calculation of the global reference? All Heavys passing the basic filtering or all heavys having a corresponding light?}

\item{PGcalculation}{Selects columns to build ratios on. Best variant should be "standard" (using Ms1.Translated and Precursor.Translated). For single cell data use "sc" (using both independent of completness). Other options are only use "Ms1.Translated" or only use "Precursor.Translated", this is not recommendet.}

\item{generatePGmatrix}{If set to TRUE an additional output is generated that is similar to pg_matrix from DIA-NN (wide format by Run), currently only works for classic DIA-SiS (L + spike-in, no tripple SILAC). Default is FALSE. This table cannot be used with the other functions of this package.}

\item{version}{DIA-NN version used to analyse the raw data. Default and recommended is 1.8.1. Set to 1.9 for higher versions. Recommended DIA-NN settings for 1.8.2 beta 22 or higher are QuantUMS: legacy; turn off MBR; and --channel-spec-norm}
}
\value{
a tibble containing following columns: Run, Protein.Group, Strupped.Sequence.Charge, Intensity.Type (Containing "Ms1.Translated" and "Precursor.Translated"), L, M, H (if existing; contain the corresponding precursor intensities of that channel given in Intensity.Type), N.Precursors (Number of precursors defining a protein, corresponding to the respective column in filterSet that was selected in useFilter), LvsH/MvsH/LvsM (Log10 Precursor ratios of the Channels), LvsH.PG/MvsH.PG/LvsM.PG (log10 Protein.Group ratios based on the median log10 precursor ratios of both intensity types per protein & run) and Global.Log10.Reference.Intensity (Median log10 precursor intensity of the reference/spike-in channel per protein, acts as a normalization factor to calculate Abundance in the other channels. To calculate protein abundance in other channels use eg. LvsH.PG + Global.Log10.Reference.Intensity). Also contains column with information of applied filter sets and global reference used.
}
\description{
Function calculating the SILAC ratios for all precursors and proteins using one of the filter sets. WARNING: Tripple SILAC CURRENTLY ONLY WORKS WITH REQUANTIFY BUT NOT FOR BASIC FILTERING. It filters for nPrecursors and then calculates all ratios anyways as long as there is any M / L (-> also if a M never passed filters)
}
\examples{
# for bulk
data <- clean_DIANN(data) # read in the data
filter_frame <- filter_DIANN(data) # generate filter data frame

silac_ratios <- calculate_SILAC_ratios(data = data, filterSet = filter_frame, useFilter = "requantify", globalReference = "H", 
globalCalculation = "all", PGcalculation = "standard")

# for sc data
data <- clean_DIANN(data) # read in the data
filter_frame <- filter_DIANN(data,  CalcCols = "any") # generate filter data frame

silac_ratios <- calculate_SILAC_ratios(data = data, filterSet = filter_frame, useFilter = "requantify", globalReference = "H", 
globalCalculation = "all", PGcalculation = "sc")

# for DIA-NN 1.8.2 beta 22 or higher
 filter_frame <- filter_DIANN(data, CalcCols = "any", ChannelFilt = 0.01, version = "1.9")
silac_ratios <- calculate_SILAC_ratios(data = data, filterSet = filter_frame, useFilter = "requantify", globalReference = "H", 
globalCalculation = "all", PGcalculation = "standard", version = "1.9")

}
